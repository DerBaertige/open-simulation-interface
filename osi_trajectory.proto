syntax = "proto2";

option optimize_for = SPEED;

import "osi_common.proto";
import "";

package osi3;

//
// \brief Interface consisting of trajectory information.
// This information is passed on to actuator management for controlling the traffic participant for e.g. vehicles
//
// All coordinates and orientations are relative to the global coordinate system.
//

message DriverOutput
{
    //*****to be discussed further*****
    // The intention of AD function to actuator management
    //
    enum DriverOutputMode
    {    
      // Native trajectory information
      //
      TrajectoryData = 0;

      // Desired State of vehicle intended by AD Function
      //
      DesiredState = 1;
    }

}

message TrajectoryData
{
    //*****to be discussed further*****
    
    // intended position to be reached in x-direction.
    //
    optional double desired_x_pos = 1;
    
    // intended position to be reached in y-direction.
    //
    optional double desired_y_pos = 2;
    
    // intended heading to be reached.
    //
    optional double desired_heading = 3;
    
    // timestamp
    //
    optional double timestamp = 4;

}

message DesiredState
{  
    //*****to be discussed further*****
    // intended position to be reached in x-direction.
    //
    optional double desired_x_pos = 1;
    
    // intended position to be reached in y-direction.
    //
    optional double desired_y_pos = 2;
    
    // intended heading to be reached.
    //
    optional double desired_heading = 3;
    
    // timestamp
    //
    optional double timestamp = 4;
    
    // intended velocity to be reached. Assuming in X-Direction. tbd: Y-Direction is to considered?
    //
    optional double desired_velocity = 5;
    
    // intended acceleration to be reached. Assuming in X-Direction. tbd: Y-Direction is to considered?
    //
    optional double desired_acceleration = 6;

}
